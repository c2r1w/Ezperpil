import mongoose, { Schema, Document } from 'mongoose';

export interface IWebinarLandingPage extends Document {
  inviterUsername: string;
  templateType: 'video' | 'text';
  headerHeadline: string;
  headerSubheadline: string;
  headerHeadlineSize: number;
  headerHeadlineColor: string;
  isHeaderHeadlineBold: boolean;
  headerSubheadlineSize: number;
  headerSubheadlineColor: string;
  isHeaderSubheadlineBold: boolean;
  headerBackgroundType: 'gradient' | 'color' | 'image';
  headerGradientStart: string;
  headerGradientEnd: string;
  headerSolidColor: string;
  headerImagePreview: string;
  headerOverlayColor: string;
  headerOverlayOpacity: number;
  titleSize: number;
  titleColor: string;
  isTitleBold: boolean;
  learnSectionTitle: string;
  presenterSectionTitle: string;
  includedSectionTitle: string;
  considerationSectionTitle: string;
  testimonialsSectionTitle: string;
  opportunitySectionTitle: string;
  accessSectionTitle: string;
  webinarDateTime: Date;
  countdownSize: number;
  countdownColor: string;
  isCountdownBold: boolean;
  previewVideoUrl: string;
  learningPoints: string[];
  caseStudyHeadline: string;
  caseStudyDescription: string;
  caseStudyImageUrl: string;
  caseStudyHeadlineSize: number;
  caseStudyHeadlineColor: string;
  isCaseStudyHeadlineBold: boolean;
  caseStudyDescriptionSize: number;
  caseStudyDescriptionColor: string;
  isCaseStudyDescriptionBold: boolean;
  includedPoints: string[];
  includedItemSize: number;
  includedItemColor: string;
  isIncludedItemBold: boolean;
  presenterName: string;
  presenterDescription: string;
  presenterNameSize: number;
  presenterNameColor: string;
  isPresenterNameBold: boolean;
  presenterDescriptionSize: number;
  presenterDescriptionColor: string;
  isPresenterDescriptionBold: boolean;
  presenterAvatar: string;
  considerationPoints: string[];
  considerationItemSize: number;
  considerationItemColor: string;
  isConsiderationItemBold: boolean;
  testimonials: any[];
  testimonialNameSize: number;
  testimonialNameColor: string;
  isTestimonialNameBold: boolean;
  testimonialDescriptionSize: number;
  testimonialDescriptionColor: string;
  isTestimonialDescriptionBold: boolean;
  testimonialBeforeLabelColor: string;
  testimonialAfterLabelColor: string;
  testimonialSectionDescription: string;
  testimonialSectionDescriptionSize: number;
  testimonialSectionDescriptionColor: string;
  isTestimonialSectionDescriptionBold: boolean;
  isPaymentEnabled: boolean;
  paymentLink: string;
  paymentButtonText: string;
  paymentSectionTitle: string;
}

const WebinarLandingPageSchema: Schema = new Schema({
  inviterUsername: { type: String, required: true },
  templateType: { type: String, enum: ['video', 'text'], required: true },
  headerHeadline: String,
  headerSubheadline: String,
  headerHeadlineSize: Number,
  headerHeadlineColor: String,
  isHeaderHeadlineBold: Boolean,
  headerSubheadlineSize: Number,
  headerSubheadlineColor: String,
  isHeaderSubheadlineBold: Boolean,
  headerBackgroundType: { type: String, enum: ['gradient', 'color', 'image'] },
  headerGradientStart: String,
  headerGradientEnd: String,
  headerSolidColor: String,
  headerImagePreview: String,
  headerOverlayColor: String,
  headerOverlayOpacity: Number,
  titleSize: Number,
  titleColor: String,
  isTitleBold: Boolean,
  learnSectionTitle: String,
  presenterSectionTitle: String,
  includedSectionTitle: String,
  considerationSectionTitle: String,
  testimonialsSectionTitle: String,
  opportunitySectionTitle: String,
  accessSectionTitle: String,
  webinarDateTime: Date,
  countdownSize: Number,
  countdownColor: String,
  isCountdownBold: Boolean,
  previewVideoUrl: String,
  learningPoints: [String],
  caseStudyHeadline: String,
  caseStudyDescription: String,
  caseStudyImageUrl: String,
  caseStudyHeadlineSize: Number,
  caseStudyHeadlineColor: String,
  isCaseStudyHeadlineBold: Boolean,
  caseStudyDescriptionSize: Number,
  caseStudyDescriptionColor: String,
  isCaseStudyDescriptionBold: Boolean,
  includedPoints: [String],
  includedItemSize: Number,
  includedItemColor: String,
  isIncludedItemBold: Boolean,
  presenterName: String,
  presenterDescription: String,
  presenterNameSize: Number,
  presenterNameColor: String,
  isPresenterNameBold: Boolean,
  presenterDescriptionSize: Number,
  presenterDescriptionColor: String,
  isPresenterDescriptionBold: Boolean,
  presenterAvatar: String,
  considerationPoints: [String],
  considerationItemSize: Number,
  considerationItemColor: String,
  isConsiderationItemBold: Boolean,
  testimonials: [Schema.Types.Mixed],
  testimonialNameSize: Number,
  testimonialNameColor: String,
  isTestimonialNameBold: Boolean,
  testimonialDescriptionSize: Number,
  testimonialDescriptionColor: String,
  isTestimonialDescriptionBold: Boolean,
  testimonialBeforeLabelColor: String,
  testimonialAfterLabelColor: String,
  testimonialSectionDescription: String,
  testimonialSectionDescriptionSize: Number,
  testimonialSectionDescriptionColor: String,
  isTestimonialSectionDescriptionBold: Boolean,
  isPaymentEnabled: Boolean,
  paymentLink: String,
  paymentButtonText: String,
  paymentSectionTitle: String,
});

export default mongoose.models.WebinarLandingPage || mongoose.model<IWebinarLandingPage>('WebinarLandingPage', WebinarLandingPageSchema);
